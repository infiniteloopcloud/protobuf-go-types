name: Docker

on:
  push:
    branches:
      - dev-wolfy
      #- main

    tags:
      - v*

  # Run tests for any PRs
  pull_request:

env:
  IMAGE_NAME: protoc-gen-go-types

jobs:
  #test_go_build:
  #  strategy:
  #    matrix:
  #      # This is just a version to compile the integration_test.go; see
  #      # golangVersions in that file for the list of actual Go versions used.
  #      go-version: [1.x]
  #      os: [ubuntu-latest] # TODO: Add [macos-latest, windows-latest]
  #  runs-on: ${{ matrix.os }}
  #  steps:
  #  - name: Install Linux dependencies
  #    if: runner.os == 'Linux'
  #    run: sudo apt-get -y install autoconf automake libtool curl make g++ unzip
  #  - name: Install Go
  #    uses: actions/setup-go@v3
  #    with:
  #      go-version: ${{ matrix.go-version }}
  #  - name: Checkout code
  #    uses: actions/checkout@v3
  #  - name: Cache dependencies
  #    uses: actions/cache@v3.0.2
  #    with:
  #      path: .cache
  #      key: ${{ runner.os }}-${{ hashFiles('integration_test.go') }}
  #  - name: Test
  #    run: go test -v -timeout=60m -count=1 -failfast integration_test.go

  test_docker_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run build tests
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo VERSION=$VERSION

            docker build -t "protoc-go-types:$VERSION" .
  push:
    # Ensure test job passes before pushing image
    needs: test_docker_build

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME
      - name: Log into registry
        run: echo "${{ secrets.DEPLOYMENT_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION